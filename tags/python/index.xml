<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>python on 0xbbeer Blog</title>
    <link>https://www.0xbbeer.ru/tags/python/</link>
    <description>Recent content in python on 0xbbeer Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Jan 2023 15:09:47 +0300</lastBuildDate><atom:link href="https://www.0xbbeer.ru/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zabbix: Автоматическое создание Zabbix Template с помощью snmpwalk</title>
      <link>https://www.0xbbeer.ru/posts/snmpwalk-to-zabbix-template/</link>
      <pubDate>Sun, 29 Jan 2023 15:09:47 +0300</pubDate>
      
      <guid>https://www.0xbbeer.ru/posts/snmpwalk-to-zabbix-template/</guid>
      <description>Коллега поделился хорошим репозиторием - https://github.com/Sean-Bradley/SNMPWALK2ZABBIX
Если вы вдруг создавали или создаете шаблоны SNMP для Zabbix-a , то этот модуль для python сохранит ваше драгоценное время.
Суть в том, что модуль автоматически опрашиват устройства и создает все нужные айтемы (что является самым затратным по времени), Вам остается только изменить имена айтемов, типы данных и настроить нужные триггеры.</description>
    </item>
    
    <item>
      <title>Python: Генерация сертификатов из Microsoft CA в Linux</title>
      <link>https://www.0xbbeer.ru/posts/python-msca-cert-gen/</link>
      <pubDate>Tue, 01 Nov 2022 16:30:09 +0300</pubDate>
      
      <guid>https://www.0xbbeer.ru/posts/python-msca-cert-gen/</guid>
      <description>Те, кто в своей инфраструктуре использует Microsoft CA, могли часто встречаться с проблемой выпуска сертификатов для linux машин\cервисов.
Все время приходилось вручную генерировать сертификат с помощью openssl, а далее идти в веб интерфейс MS CA,запрашивать, потом скачивать сертификат и заливать его на машину.
К счастью, нашелся модуль python, который облегачет получение сертификатов в Linux- certsrv
Документация к модулю
Рассмотрим пример получения сертификата:
При установке модуля по умолчанию используется basic-аутентификация, мы будем рассматривать аутентификацию с помощью NTLM, поэтому установим модуль с добавлением [ntlm] к названию.</description>
    </item>
    
    <item>
      <title>Python: SSL CERTIFICATE_VERIFY_FAILED</title>
      <link>https://www.0xbbeer.ru/posts/python-ssl-cert-verify-failed/</link>
      <pubDate>Sun, 09 Oct 2022 00:09:21 +0300</pubDate>
      
      <guid>https://www.0xbbeer.ru/posts/python-ssl-cert-verify-failed/</guid>
      <description>Сертификаты для внутренних сервисов я выпускаю с помощью локального CA. Бывает так, что при работе в виртуальном окружении Python (venv), например, с каким-нибудь внутренним API по средством HTTPS запросов, вылезает ошибка:
1SSL: CERTIFICATE_VERIFY_FAILED Связано это с тем, что наше виртуальное окружение, а точнее модуль certifi, ничего не знает о нашем локальном центре сертификации.
К счастью, на просторах инета нашлось простое решение1- добавить информацию о корневом сертификате в виртуальное окружение.
Для этого:</description>
    </item>
    
  </channel>
</rss>
